[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "demo"
version = "0.0.1"
description = "Demo project"
authors = [
    { name = "David Montague", email = "david@pydantic.dev" },
]
license = "MIT"
readme = "README.md"
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: Unix",
    "Operating System :: POSIX :: Linux",
    "Environment :: Console",
    "Environment :: MacOS X",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet",
]
requires-python = ">=3.9"
dependencies = [
    "pydantic-graph",
    "pydantic-evals",
    "pydantic-ai-slim",
]


[tool.hatch.build.targets.wheel]
packages = ["demo"]

[tool.uv.sources]
demo = { workspace = true }

[tool.ruff.lint]
extend-select = ["Q", "RUF100", "C90", "UP", "I", "D"]
isort = { combine-as-imports = true, known-first-party = ["demo"] }
mccabe = { max-complexity = 15 }
ignore = [
    "D100", # ignore missing docstring in module
    "D101", # ignore missing docstring in public class
    "D102", # ignore missing docstring in public method
    "D103", # ignore missing docstring in public function,
    "D104", # ignore missing docstring in public package
    "D105", # ignore missing docstring in magic methods
    "D107", # ignore missing docstring in __init__ methods
]
